@import "./components/all";
@import "./reset.scss";
@import "./mixins.scss";

/*
  Guide for how to structure css

  selector {
    @include first

    < Size rules >
    < Position rules >
    < Font rules >
    < Styling rules >
    < Other rules >

    &:{

    }

    nested-selector {

    }
  }

  other-selector {

  }

  - - -

  Selector names are NEVER capitalized in any form and NEVER
  underlined. If the selector name is multiple words you add
  dashes like so.

  selector-with-excessively-long-name {

  }

  Not following this convention might cause some pain down the
  road in form of confusion and debuggin.

  - - -

  Always keep one space between selector braces and what's below
  except is when nested selectors are closing, for example:

  top-level-selector {
  
    nested-selector {
  
    }
  }

  Exceptions can be made for browser compatibility
  one liners which are rarely modified

  - - -

  Do not nest selectors excessively, that results in hard
  to maintain code and bad re-usability.

  Try to only nest selectors that you know will exclusively
  be used inside that parent selector, but try to avoid it.

  - - -
  
  General rules:

  - Prefer classes to id's, those are for javascript.

  - Avoid all use of !important, properly written css
    generally should not need it.

  - Use double quotes instead of single quotes, this
    is simply a case of preferrence + consistency.

*/

html {
  font-family: "Open Sans";
  background: rgb(255,255,255);
}

.row {
  min-height: 165px;
  max-width:  1080px;
  overflow: hidden;
  margin: 0 auto;
}

.col {
  width:      calc(50% - 10px);
  min-width:  calc(50% - 10px);
  display: inline-block;
}

.left {
  float: left;
  padding-right: 10px;
}

.right {
  float: right;
  padding-left: 10px;
}

.container {
  display: block;
  margin: 0 auto;
  min-width: 900px;
  text-align: center;
}